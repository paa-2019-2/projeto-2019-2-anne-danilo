(bubblesort_soundness
 (sorted?_TCC1 0
  (sorted?_TCC1-1 nil 3784197372 ("" (termination-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   nil))
 (bubblesort_sorts 0
  (bubblesort_sorts-1 nil 3784197386
   ("" (measure-induct "length(l)" "l")
    (("" (skeep)
      (("" (expand "bubblesort")
        (("" (prop)
          (("1" (inst?)
            (("1" (prop) (("1" (assert) (("1" (grind) nil nil)) nil))
              nil))
            nil)
           ("2" (expand "list2finseq")
            (("2" (expand "bubblesort_aux")
              (("2" (prop)
                (("1" (inst?) (("1" (grind) nil nil)) nil)
                 ("2" (inst?)
                  (("2" (prop) (("2" (postpone) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (bubblesort_is_permutations 0
  (bubblesort_is_permutations-1 nil 3784198488
   ("" (measure-induct "length(l)" "l")
    (("" (skeep)
      (("" (expand "bubblesort" 1)
        (("" (lift-if)
          (("" (prop)
            (("1" (expand "permutations") (("1" (propax) nil nil)) nil)
             ("2" (expand "list2finseq")
              (("2" (expand "bubblesort_aux")
                (("2" (lift-if)
                  (("2" (prop)
                    (("1" (grind) nil nil) ("2" (postpone) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (bubblesort_works 0
  (bubblesort_works-1 nil 3784199069
   ("" (lemma "bubblesort_is_permutations")
    (("" (lemma "bubblesort_sorts")
      (("" (skeep)
        (("" (inst?) (("" (inst?) (("" (prop) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((bubblesort_sorts formula-decl nil bubblesort_soundness nil)
    (number nonempty-type-decl nil numbers nil)
    (list type-decl nil list_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (bubblesort_is_permutations formula-decl nil bubblesort_soundness
     nil))
   shostak)))

